<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wxs.mapper.StudentCourseMapper" >
  <resultMap id="BaseResultMap" type="com.wxs.po.StudentCourse" >
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="progress" property="progress" jdbcType="INTEGER" />
    <result column="mark" property="mark" jdbcType="INTEGER" />
    <result column="has_exam" property="hasExam" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, student_id, progress, mark, has_exam
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wxs.po.StudentCourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.wxs.po.StudentCourseExample" >
    delete from student_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wxs.po.StudentCourse" >
    insert into student_course (course_id, student_id, progress, 
      mark, has_exam)
    values (#{courseId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{progress,jdbcType=INTEGER}, 
      #{mark,jdbcType=INTEGER}, #{hasExam,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.wxs.po.StudentCourse" >
    insert into student_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="progress != null" >
        progress,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="hasExam != null" >
        has_exam,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="progress != null" >
        #{progress,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=INTEGER},
      </if>
      <if test="hasExam != null" >
        #{hasExam,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wxs.po.StudentCourseExample" resultType="java.lang.Integer" >
    select count(*) from student_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student_course
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.progress != null" >
        progress = #{record.progress,jdbcType=INTEGER},
      </if>
      <if test="record.mark != null" >
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
      <if test="record.hasExam != null" >
        has_exam = #{record.hasExam,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      progress = #{record.progress,jdbcType=INTEGER},
      mark = #{record.mark,jdbcType=INTEGER},
      has_exam = #{record.hasExam,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>